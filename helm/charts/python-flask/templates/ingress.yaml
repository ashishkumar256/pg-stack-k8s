apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    {{- if index .Values.ingress.external "rules" }}
    nginx.ingress.kubernetes.io/server-alias: {{ .Values.app.env }}-{{ .Values.global.project }}-{{ .Values.app.component }}-{{ .Values.app.type }}.{{ .Values.app.env }}.svc.cluster.local
    {{- end }}
  name: {{ .Values.app.env }}-{{ .Values.global.project }}-{{ .Values.app.component }}-{{ .Values.app.type }}-ext
  namespace: {{ .Values.app.env }}
spec:
  ingressClassName: "nginx"
  rules:
  - host: {{ .Values.ingress.external.host }}
    http:
      paths:
      {{- range $key, $val := .Values.ingress.external.rules }}
      {{- range $val.paths }}
      - path: {{ . }}
        pathType: Prefix
        backend:
          service: 
            name: {{ $.Values.app.env }}-{{ $.Values.global.project }}-{{ $.Values.app.component }}-{{ $.Values.app.type }}
            port: 
              number: {{ $val.port }}
      {{- end }}
      {{- end }}

---
{{- if or (eq .Values.app.env "prd") (eq .Values.app.env "poc") }}
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: {{ .Values.health_check.httpGet.path }}
  name: {{ .Values.app.env }}-{{ .Values.global.project }}-{{ .Values.app.component }}-{{ .Values.app.type }}-int
  namespace: {{ .Values.app.env }}
spec:
  ingressClassName: "nginx"
  rules:
  - host: {{ .Values.ingress.internal.host }}
    http:
      paths:
      {{- range $key, $val := (concat .Values.ingress.external.rules .Values.ingress.internal.rules) }}
      {{- range $val.paths }}
      - path: {{ . }}
        pathType: Prefix
        backend:
          service: 
            name: {{ $.Values.app.env }}-{{ $.Values.global.project }}-{{ $.Values.app.component }}-{{ $.Values.app.type }}
            port: 
              number: {{ $val.port }}
      {{- end }}
      {{- end }}
{{- end }}
